<!DOCTYPE html>
<html lang="en">
@{
    var dev = HostContext.AppHost.IsDevelopmentEnvironment();
}
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
<head>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <title>@ViewData["Title"] - SmsGateCms</title>

    <environment include="Development">
        <link rel="stylesheet" href="~/lib/css/font-awesome/css/all.css"/>
    </environment>
    <environment exclude="Development">
        <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.15.4/css/all.css"
              asp-fallback-href="~/lib/css/font-awesome/css/all.min.css"
              crossorigin="anonymous">
    </environment>
    @* <link rel="stylesheet" href="/css/vendor.css"/> *@
    <link rel="stylesheet" href="/css/style.css"/>
    <link rel="stylesheet" href="/css/app.css"/>
    <link rel="stylesheet" href="/css/typography.css"/>

    <!-- Link Swiper's CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@9/swiper-bundle.min.css" />

    <!-- Link Bootstrap's CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.5.0/font/bootstrap-icons.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet"
          integrity="sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65" crossorigin="anonymous">

    <!-- Google Fonts ================================================== -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Work+Sans:wght@300;400;500;600;700&display=swap"
          rel="stylesheet">
    
    @Html.ImportMap(new()
    {
        ["vue"]                  = ("/lib/mjs/vue.mjs",                 "/lib/mjs/vue.min.mjs"),
        ["@servicestack/client"] = ("/lib/mjs/servicestack-client.mjs", "/lib/mjs/servicestack-client.min.mjs"),
        ["@servicestack/vue"]    = ("/lib/mjs/servicestack-vue.mjs",    "/lib/mjs/servicestack-vue.min.mjs"),
        ["app.mjs"]              = ("/mjs/app.mjs",                     "/mjs/app.mjs"),
        ["dtos.mjs"]             = ("/mjs/dtos.mjs",                    "/mjs/dtos.mjs"),
    })
    @await RenderSectionAsync("head", required: false)
    
    @if (dev) {
        <script>window.Server = @await Html.ApiAsJsonAsync(new MetadataApp())</script>
    }
    <script type="module">
    import { useAuth, useMetadata } from "@@servicestack/vue"
    const { signIn } = useAuth()
    signIn(@await Html.ApiAsJsonAsync(new Authenticate()))
    
    const { loadMetadata } = useMetadata()
    loadMetadata({
        olderThan: window.Server ? null : location.search.includes('clear=metadata') ? 0 : 60 * 60 * 1000 //1hr 
    })
    </script>
</head>
<body class="bg-white dark:bg-black dark:text-white">
<!-- nav bar start  -->
<header id="nav" class="site-header position-fixed text-white bg-dark">
    <nav id="navbar-example2" class="navbar navbar-expand-lg py-4">
        <div class="container ">
            <a class="navbar-brand" href="/Home/Messages"><span class="hidden sm:block text-2xl font-semibold">Sms Gate Cms</span></a>
            <button class="navbar-toggler text-white" type="button" data-bs-toggle="offcanvas"
                    data-bs-target="#offcanvasNavbar2" aria-controls="offcanvasNavbar2" aria-label="Toggle navigation"><ion-icon
                    name="menu-outline" style="font-size: 30px;"></ion-icon></button>

            <div class="offcanvas offcanvas-end" tabindex="-1" id="offcanvasNavbar2"
                 aria-labelledby="offcanvasNavbar2Label">
                <div class="offcanvas-header">
                    <h5 class="offcanvas-title" id="offcanvasNavbar2Label">Menu</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="offcanvas"
                            aria-label="Close"></button>
                </div>
                <div class="offcanvas-body">
                    <ul class="navbar-nav align-items-center justify-content-end align-items-center flex-grow-1">
                        @{
                        var isAuthenticated = await Html.IsAuthenticatedAsync();
                        var isAdmin = await Html.HasRoleAsync("Admin");
                        
                        string currentController = HttpContextAccessor.HttpContext?.Request.RouteValues["controller"]?.ToString() ?? "";
                        string currentAction = HttpContextAccessor.HttpContext?.Request.RouteValues["action"]?.ToString() ?? "";

                        async Task RenderNavLink(string controller, string action, string childContent, string? cls=null)
                        {
                            var isActive = controller == currentController && action == currentAction ? "active" : "";
                        <li class="nav-item">
                            <a asp-controller="@controller" asp-action="@action"
                               class="nav-link @isActive me-md-4" style="color: #D6D6D6">
                                @Html.Raw(childContent)
                            </a>
                        </li>
                        }

                        async Task RenderLinkButton(string controller, string action, string childContent, string? cls = null)
                        {
                        <li class="nav-item">
                            <a asp-controller="@controller" asp-action="@action" class="nav-link me-md-4" style="color: #D6D6D6">
                                @Html.Raw(childContent)
                            </a>
                        </li>
                        }
                        await RenderNavLink("Home", "Messages", "Quản lý tin nhắn");
                        await RenderNavLink("Home", "Partners", "Quản lý đối tác");
                        await RenderNavLink("Home", "Providers", "Quản lý NCC");
                        await RenderNavLink("Home", "MessageTemplates", "Tin nhắn mẫu");
                        // await RenderNavLink("Home", "AuthExamples", "Auth <span class=\"ml-1 hidden sm:block\">Examples</span>");
                        if (isAdmin)
                        {
                        <li class="nav-item">
                            <a href="/admin-ui" class="nav-link me-md-4" style="color: #D6D6D6">
                                Admin UI
                            </a>
                        </li>
                        }
                        // await RenderNavLink("Manage", "Index", "Account");

                        if (!isAuthenticated)
                        {
                        await RenderLinkButton("Account", "Login", "Đăng nhập");
                        }
                        else
                        {
                            <li class="nav-item">
                                <a asp-controller="Manage" asp-action="Index" class="nav-link me-md-4" style="color: #D6D6D6">
                                    Xin chào, @User.GetDisplayName()
                                </a>
                            </li>
                        <li class="nav-item">
                            <form asp-area="" asp-controller="Account" asp-action="Logout" method="post">
                                <button type="submit" class="@Css.SecondaryButton">Sign Out</button>
                            </form>
                        </li>
                        }
                        }
                        <li class="nav-item ms-2">
                            @await Html.PartialAsync("DarkModeToggle")
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </nav>
</header>
<div class="min-h-screen">
    <partial name="_CookieConsentPartial"/>
    <main role="main" class="pb-3 pl-2 sm:pl-0">
        @RenderBody()
    </main>
</div>

<!-- Footer start  -->
<section id="footer">
    <footer class="d-flex flex-wrap justify-content-between align-items-center border-top"></footer>
    <div class="container">
        <footer class="d-flex flex-wrap justify-content-between align-items-center py-2 ">
            <div class="col-md-8 d-flex align-items-center">
                <p>©2024 SMS Gate CMS, Inc. All rights reserved.</p>
            </div>
            <div class="col-md-4 d-flex align-items-center">
                <p>
                    HTML template by:
                    <a href="#" class="link-primary" target="_blank">SMS Gate CMS</a>
                    <br>
                    Distributed by:
                    <a href="#" class="link-primary" target="_blank">SMS Gate CMS</a>
                </p>

            </div>

        </footer>
    </div>
</section>

<environment include="Development">
    <script src="~/lib/js/jquery.js"></script>
</environment>
<environment exclude="Development">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"
            asp-fallback-src="~/lib/js/jquery.min.js"
            asp-fallback-test="window.jQuery"
            crossorigin="anonymous">
    </script>
</environment>
<script src="~/js/site.js" asp-append-version="true"></script>

@await RenderSectionAsync("Scripts", required: false)

<script type="module">
import { init } from "app.mjs"
init()
</script>
</body>
</html>